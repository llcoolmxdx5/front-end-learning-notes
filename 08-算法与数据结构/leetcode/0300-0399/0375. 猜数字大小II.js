/**
 * @param {number} n
 * @return {number}
 */
var getMoneyAmount = function (n) {
  // 状态定义 dp[x][y] => 猜从 x -> y 要的最小代价
  const dp = Array.from({ length: n + 1 }, () =>
    new Array(n + 1).fill(Number.MAX_SAFE_INTEGER)
  );
  dp[0][1] = 0;
  for (let i = 0; i <= n; i++) {
    dp[i][i] = 0;
  }
  // 状态转移
  // 猜从 1 -> n 的值设为 x 有3种可能
  // 1 x是答案, 2 小于x -> x + dp[0][x - 1],    3 大于x -> x + dp[x + 1][n];
  for (let x = n; x >= 0; x--) {
    for (let y = x; y <= n; y++) {
      for (let k = x + 1; k < y; k++) {
        dp[x][y] = Math.min(dp[x][y], Math.max(dp[x][k - 1], dp[k + 1][y]) + k);
      }
    }
  }
  // console.log(dp);
  return dp[0][n];
};

var getMoneyAmount = function (n) {
  const arr = [
    0, 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 21, 24, 27, 30, 34, 38, 42, 46, 49,
    52, 55, 58, 61, 64, 67, 70, 73, 76, 79, 82, 86, 90, 94, 98, 102, 106, 110,
    114, 119, 124, 129, 134, 139, 144, 149, 154, 160, 166, 172, 178, 182, 186,
    190, 194, 198, 202, 206, 210, 214, 218, 222, 226, 230, 234, 238, 242, 246,
    250, 254, 258, 262, 266, 270, 274, 278, 282, 286, 290, 295, 300, 305, 310,
    315, 320, 325, 330, 335, 340, 345, 350, 355, 360, 365, 370, 376, 382, 388,
    394, 400, 406, 412, 418, 424, 430, 436, 442, 448, 454, 460, 466, 473, 480,
    487, 494, 501, 508, 515, 522, 529, 536, 543, 550, 555, 560, 565, 570, 575,
    580, 585, 590, 595, 600, 605, 610, 615, 620, 625, 630, 635, 640, 645, 650,
    655, 660, 666, 674, 680, 686, 692, 698, 703, 708, 713, 718, 723, 728, 733,
    738, 743, 748, 753, 758, 763, 768, 773, 778, 783, 788, 793, 798, 803, 808,
    813, 818, 823, 828, 833, 838, 843, 848, 853, 858, 863, 868, 873, 878, 883,
    888, 893, 898, 904, 910, 916, 922, 928, 934, 940, 946, 952,
  ];
  return arr[n - 1];
};

console.assert(getMoneyAmount(10) === 16, 1);
console.assert(getMoneyAmount(1) === 0, 2);
console.assert(getMoneyAmount(200) === 952, 3);
